{"version":3,"file":"jsforce-api-apex.min.js","sources":["jsforce-api-apex.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","jsforce","modules","api","Apex","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"conn","_conn","prototype","_baseUrl","instanceUrl","_createRequestParams","method","path","body","params","url","test","headers","Content-Type","JSON","stringify","get","callback","request","thenCall","post","undefined","put","patch","del"],"mappings":";CAAA,SAAUA,GAAG,GAAoB,gBAAVC,UAAoC,mBAATC,QAAsBA,OAAOD,QAAQD,QAAS,IAAmB,kBAATG,SAAqBA,OAAOC,IAAKD,UAAUH,OAAO,CAAC,GAAIK,EAAkCA,GAAb,mBAATC,QAAwBA,OAA+B,mBAATC,QAAwBA,OAA6B,mBAAPC,MAAsBA,KAAYC,KAAKJ,EAAGA,EAAEK,UAAUL,EAAEK,YAAeL,EAAGA,EAAEM,UAAUN,EAAEM,YAAeN,EAAGA,EAAEO,MAAMP,EAAEO,QAAWP,EAAEQ,KAAOb,MAAO,WAAqC,MAAO,SAAUc,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAInB,GAAE,GAAIwB,OAAM,uBAAuBL,EAAE,IAAK,MAAMnB,GAAEyB,KAAK,mBAAmBzB,EAAE,GAAI0B,GAAEV,EAAEG,IAAIlB,WAAYc,GAAEI,GAAG,GAAGQ,KAAKD,EAAEzB,QAAQ,SAASa,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIY,EAAEA,EAAEzB,QAAQa,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGlB,QAAkD,IAAI,GAA1CsB,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEW,OAAOT,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKW,GAAG,SAASP,EAAQpB,EAAOD,GAM35B,YAQA,IAAIY,GAAO,SAASiB,GAClBrB,KAAKsB,MAAQD,EAMfjB,GAAKmB,UAAUC,SAAW,WACxB,MAAOxB,MAAKsB,MAAMG,YAAc,sBAMlCrB,EAAKmB,UAAUG,qBAAuB,SAASC,EAAQC,EAAMC,GAC3D,GAAIC,IACFH,OAAQA,EACRI,IAAK/B,KAAKwB,WAAaI,EAUzB,OARK,kBAAkBI,KAAKL,KAC1BG,EAAOG,SACLC,eAAiB,qBAGjBL,IACFC,EAAOD,KAAOM,KAAKC,UAAUP,IAExBC,GAUT1B,EAAKmB,UAAUc,IAAM,SAAST,EAAMU,GAClC,MAAOtC,MAAKsB,MAAMiB,QAAQvC,KAAK0B,qBAAqB,MAAOE,IAAOY,SAASF,IAW7ElC,EAAKmB,UAAUkB,KAAO,SAASb,EAAMC,EAAMS,GACrB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAS9B,KAAK0B,qBAAqB,OAAQE,EAAMC,EACrD,OAAO7B,MAAKsB,MAAMiB,QAAQT,GAAQU,SAASF,IAW7ClC,EAAKmB,UAAUoB,IAAM,SAASf,EAAMC,EAAMS,GACpB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAS9B,KAAK0B,qBAAqB,MAAOE,EAAMC,EACpD,OAAO7B,MAAKsB,MAAMiB,QAAQT,GAAQU,SAASF,IAW7ClC,EAAKmB,UAAUqB,MAAQ,SAAShB,EAAMC,EAAMS,GACtB,kBAATT,KACTS,EAAWT,EACXA,EAAOa,OAET,IAAIZ,GAAS9B,KAAK0B,qBAAqB,QAASE,EAAMC,EACtD,OAAO7B,MAAKsB,MAAMiB,QAAQT,GAAQU,SAASF,IAuB7ClC,EAAKmB,UAAUsB,IACfzC,EAAKmB,UAAU,UAAY,SAASK,EAAMU,GACxC,MAAOtC,MAAKsB,MAAMiB,QAAQvC,KAAK0B,qBAAqB,SAAUE,IAAOY,SAASF,IAIhF7C,EAAOD,QAAUY,YAEN,IAAI","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g=(g.jsforce||(g.jsforce = {}));g=(g.modules||(g.modules = {}));g=(g.api||(g.api = {}));g.Apex = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\r\n * @file Manages Salesforce Apex REST endpoint calls\r\n * @author Shinichi Tomita <shinichi.tomita@gmail.com>\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * API class for Apex REST endpoint call\r\n *\r\n * @class\r\n * @param {Connection} conn Connection\r\n */\r\nvar Apex = function(conn) {\r\n  this._conn = conn;\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nApex.prototype._baseUrl = function() {\r\n  return this._conn.instanceUrl + \"/services/apexrest\";\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nApex.prototype._createRequestParams = function(method, path, body) {\r\n  var params = {\r\n    method: method,\r\n    url: this._baseUrl() + path\r\n  };\r\n  if (!/^(GET|DELETE)$/i.test(method)) {\r\n    params.headers = {\r\n      \"Content-Type\" : \"application/json\"\r\n    };\r\n  }\r\n  if (body) {\r\n    params.body = JSON.stringify(body);\r\n  }\r\n  return params;\r\n};\r\n\r\n/**\r\n * Call Apex REST service in GET request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.get = function(path, callback) {\r\n  return this._conn.request(this._createRequestParams('GET', path)).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in POST request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.post = function(path, body, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n  }\r\n  var params = this._createRequestParams('POST', path, body);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in PUT request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.put = function(path, body, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n  }\r\n  var params = this._createRequestParams('PUT', path, body);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Call Apex REST service in PATCH request\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.patch = function(path, body, callback) {\r\n  if (typeof body === 'function') {\r\n    callback = body;\r\n    body = undefined;\r\n  }\r\n  var params = this._createRequestParams('PATCH', path, body);\r\n  return this._conn.request(params).thenCall(callback);\r\n};\r\n\r\n/**\r\n * Synonym of Apex#delete()\r\n *\r\n * @method Apex#del\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\n/**\r\n * Call Apex REST service in DELETE request\r\n *\r\n * @method Apex#delete\r\n *\r\n * @param {String} path - URL path to Apex REST service\r\n * @param {Object} [body] - Request body\r\n * @param {Callback.<Object>} [callback] - Callback function\r\n * @returns {Promise.<Object>}\r\n */\r\nApex.prototype.del =\r\nApex.prototype[\"delete\"] = function(path, callback) {\r\n  return this._conn.request(this._createRequestParams('DELETE', path)).thenCall(callback);\r\n};\r\n\r\n\r\nmodule.exports = Apex;\r\n\n},{}]},{},[1])(1)\n});"]}